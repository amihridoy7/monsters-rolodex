{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","e","setState","searchField","target","value","onSearchChange","event","vluae","state","bind","fetch","then","response","json","users","this","filteredMonsters","filter","toLowerCase","includes","toLocaleLowerCase","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6TAOaA,G,MAAO,SAAAC,GAAK,OACrB,sBAAKC,UAAY,iBAAjB,UACI,qBAAKC,IAAK,UACVC,IAAG,+BAA4BH,EAAMI,QAAQC,GAA1C,4BACH,mCAAML,EAAMI,QAAQE,KAApB,OACA,kCAAMN,EAAMI,QAAQG,MAApB,YCJKC,G,MAAW,SAAAR,GAAK,OACzB,qBAAKC,UAAY,YAAjB,SACKD,EAAMS,SAASC,KAAI,SAAAN,GAAO,OACvB,cAAC,EAAD,CAAwBA,QAAUA,GAAtBA,EAAQC,WCLnBM,G,MAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAaC,EAAhB,EAAgBA,aAAhB,OACrB,uBACIZ,UAAY,SACZa,KAAK,SACLF,YAAcA,EACdG,SAAYF,MC2CLG,G,wDAhDb,aAAe,IAAD,8BACZ,gBAiBFH,aAAe,SAAAI,GACb,EAAKC,SAAS,CAAEC,YAAaF,EAAEG,OAAOC,SAnB1B,EAuBdC,eAAiB,SAAAC,GACf,EAAKL,SAAS,CAAEC,YAAaI,EAAMH,OAAOI,SArB1C,EAAKC,MAAQ,CACXhB,SAAU,GACVU,YAAa,IAGf,EAAKN,aAAe,EAAKA,aAAaa,KAAlB,gBARR,E,gEAWO,IAAD,OAClBC,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKb,SAAS,CAAET,SAAUsB,S,+BAcjC,IAAD,EAC2BC,KAAKP,MAA/BhB,EADD,EACCA,SAAUU,EADX,EACWA,YACZc,EAAmBxB,EAASyB,QAAO,SAAA9B,GAAO,OAC9CA,EAAQE,KAAK6B,cAAcC,SAASjB,EAAYkB,wBAGlD,OACE,sBAAKpC,UAAU,MAAf,UACE,kDACA,cAAC,EAAD,CACEW,YAAc,kBACdC,aAAgBmB,KAAKnB,eAEvB,cAAC,EAAD,CAAUJ,SAAYwB,W,GA1CZK,cCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.fb27bd87.chunk.js","sourcesContent":["\r\nimport React from 'react';\r\n\r\n\r\nimport '../card/card.styles.css';\r\n\r\n\r\nexport const Card = props => (\r\n    <div className = 'card-container'>\r\n        <img alt= \"monster\" \r\n        src = {`https://robohash.org/${props.monster.id}?set=set2&size=180x180`}/>\r\n        <h2> {props.monster.name} </h2>\r\n        <p> { props.monster.email } </p>\r\n    </div>\r\n)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","\r\nimport React from 'react';\r\n\r\nimport { Card } from '../card/card.component'\r\n\r\nimport '../card-list/card-list.styles.css';\r\n\r\n\r\nexport const CardList = props => (\r\n    <div className = 'card-list'>\r\n        {props.monsters.map(monster => (\r\n            <Card key ={monster.id} monster= {monster}/>\r\n        ))}\r\n    </div>\r\n)","import React from 'react';\r\n\r\nimport '../search-box/search-box.styles.css'\r\n\r\n\r\n\r\nexport const SearchBox = ({ placeholder, handleChange }) => (\r\n    <input \r\n        className = 'search'\r\n        type=\"search\" \r\n        placeholder= {placeholder}\r\n        onChange = {handleChange}\r\n    /> \r\n)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, { Component } from 'react';\nimport { CardList } from './components/card-list/card-list.component' ;\nimport { SearchBox } from './components/search-box/search-box.component';\nimport './App.css';\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      monsters: [],\n      searchField: ''\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then(response => response.json())\n    .then(users => this.setState({ monsters: users}));\n  }\n\n\n  handleChange = e => {\n    this.setState({ searchField: e.target.value })\n  }\n\n\n  onSearchChange = event => {\n    this.setState({ searchField: event.target.vluae});\n  }\n\n\n  render() {\n    const { monsters, searchField } = this.state;\n    const filteredMonsters = monsters.filter(monster =>\n      monster.name.toLowerCase().includes(searchField.toLocaleLowerCase())\n      );\n\n    return (\n      <div className=\"App\">\n        <h1>Monsters Rolodex</h1>\n        <SearchBox\n          placeholder = 'search monsters'\n          handleChange = {this.handleChange}\n        />\n        <CardList monsters = {filteredMonsters} />\n      </div>\n    );\n  }\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}